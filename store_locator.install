<?php

/**
 * Implements hook_schema().
 */
function store_locator_schema() {
  // Save responses from Google Maps.
  $schema['store_locator_origins'] = array(
    'description' => 'Table to store origins',
    'fields' => array(
      'origin' => array(
        'description' => "Origin number.",
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
      ),
      'json' => array(
        'description' => "JSON data.",
        'type' => 'text',
      ),
    ),
    'unique keys' => array(
      'origin' => array('origin'),
    ),
  );

  return $schema;
}

/**
 * Place we put the field config and instance arrays.
 *
 * @return array
 *   The fields and their instances this module creates.
 */
function store_locator_installed_fields() {
  $fields = array();

  // Exported field: 'node-office_location-sl_addressfield'.
  $fields['node-office_location-sl_addressfield'] = array(
    'field_config' => array(
      'active' => '1',
      'cardinality' => '1',
      'deleted' => '0',
      'entity_types' => array(),
      'field_name' => 'sl_addressfield',
      'foreign keys' => array(),
      'indexes' => array(),
      'locked' => '0',
      'module' => 'addressfield',
      'settings' => array(),
      'translatable' => '0',
      'type' => 'addressfield',
    ),
    'field_instance' => array(
      'bundle' => 'office_location',
      'default_value' => NULL,
      'deleted' => '0',
      'description' => '',
      'display' => array(
        'checkout_pane' => array(
          'label' => 'above',
          'settings' => array(),
          'type' => 'hidden',
          'weight' => 0,
        ),
        'default' => array(
          'label' => 'above',
          'module' => 'addressfield',
          'settings' => array(
            'diff_custom' => 0,
            'diff_custom_settings' => array(),
            'format_handlers' => array(
              0 => 'address',
            ),
            'use_widget_handlers' => 1,
          ),
          'type' => 'addressfield_default',
          'weight' => 0,
        ),
        'product_list' => array(
          'label' => 'above',
          'settings' => array(),
          'type' => 'hidden',
          'weight' => 0,
        ),
        'teaser' => array(
          'label' => 'above',
          'settings' => array(),
          'type' => 'hidden',
          'weight' => 0,
        ),
      ),
      'entity_type' => 'node',
      'field_name' => 'sl_addressfield',
      'label' => 'Store Locator Address',
      'required' => FALSE,
      'settings' => array(
        'user_register_form' => FALSE,
      ),
      'widget' => array(
        'module' => 'addressfield',
        'settings' => array(
          'available_countries' => array(),
          'format_handlers' => array(
            0 => 'address',
          ),
        ),
        'type' => 'addressfield_standard',
        'weight' => 0,
      ),
    ),
  );

  // Exported field: 'node-office_location-sl_geofield'.
  $fields['node-office_location-sl_geofield'] = array(
    'field_config' => array(
      'active' => '1',
      'cardinality' => '1',
      'deleted' => '0',
      'entity_types' => array(),
      'field_name' => 'sl_geofield',
      'foreign keys' => array(),
      'indexes' => array(),
      'locked' => '0',
      'module' => 'geofield',
      'settings' => array(),
      'translatable' => '0',
      'type' => 'geofield',
    ),
    'field_instance' => array(
      'bundle' => 'office_location',
      'deleted' => 0,
      'description' => '',
      'display' => array(
        'checkout_pane' => array(
          'label' => 'above',
          'settings' => array(),
          'type' => 'hidden',
          'weight' => 0,
        ),
        'default' => array(
          'label' => 'above',
          'module' => 'geofield_map',
          'settings' => array(
            'geofield_map_baselayers_hybrid' => 1,
            'geofield_map_baselayers_map' => 1,
            'geofield_map_baselayers_physical' => 0,
            'geofield_map_baselayers_satellite' => 1,
            'geofield_map_center' => array(
              'lat' => 0,
              'lon' => 0,
            ),
            'geofield_map_controltype' => 'default',
            'geofield_map_draggable' => 0,
            'geofield_map_height' => '300px',
            'geofield_map_maptype' => 'map',
            'geofield_map_max_zoom' => 0,
            'geofield_map_min_zoom' => 0,
            'geofield_map_mtc' => 'standard',
            'geofield_map_overview' => 0,
            'geofield_map_overview_opened' => 0,
            'geofield_map_pancontrol' => 1,
            'geofield_map_scale' => 0,
            'geofield_map_scrollwheel' => 0,
            'geofield_map_streetview_show' => 0,
            'geofield_map_width' => '100%',
            'geofield_map_zoom' => 8,
          ),
          'type' => 'geofield_map_map',
          'weight' => 1,
        ),
        'product_list' => array(
          'label' => 'above',
          'settings' => array(),
          'type' => 'hidden',
          'weight' => 0,
        ),
        'teaser' => array(
          'label' => 'above',
          'settings' => array(),
          'type' => 'hidden',
          'weight' => 0,
        ),
      ),
      'entity_type' => 'node',
      'field_name' => 'sl_geofield',
      'label' => 'Store Locator Geofield',
      'required' => 0,
      'settings' => array(
        'local_solr' => array(
          'enabled' => FALSE,
          'lat_field' => 'lat',
          'lng_field' => 'lng',
        ),
        'user_register_form' => FALSE,
      ),
      'widget' => array(
        'active' => 1,
        'module' => 'geocoder',
        'settings' => array(
          'delta_handling' => 'default',
          'geocoder_field' => 'sl_addressfield',
          'geocoder_handler' => 'google',
          'handler_settings' => array(
            'google' => array(
              'all_results' => 0,
              'geometry_type' => 'point',
              'reject_results' => array(
                'APPROXIMATE' => 0,
                'GEOMETRIC_CENTER' => 0,
                'RANGE_INTERPOLATED' => 0,
                'ROOFTOP' => 0,
              ),
            ),
          ),
        ),
        'type' => 'geocoder',
        'weight' => 1,
      ),
    ),
  );

  // Exported field_instance: 'node-office_location-field_store_hours'
  $fields['node-office_location-field_store_hours'] = array(
    'field_config' => array(
      'active' => 1,
      'cardinality' => -1,
      'deleted' => 0,
      'entity_types' => array(),
      'field_name' => 'field_store_hours',
      'indexes' => array(),
      'locked' => 0,
      'module' => 'office_hours',
      'settings' => array(
        'cardinality' => 2,
        'granularity' => 15,
        'hoursformat' => 1,
        'limitend' => '',
        'limitstart' => '',
        'valhrs' => 0,
      ),
      'translatable' => 0,
      'type' => 'office_hours',
    ),
    'field_instance' => array(
      'bundle' => 'office_location',
      'default_value' => NULL,
      'deleted' => 0,
      'description' => '',
      'display' => array(
        'default' => array(
          'label' => 'above',
          'module' => 'office_hours',
          'settings' => array(
            'closedformat' => 'Closed',
            'compress' => 0,
            'current_status' => array(
              'closed_text' => 'CLOSED',
              'open_text' => 'OPEN',
              'position' => 'after',
            ),
            'date_first_day' => 0,
            'daysformat' => 'short',
            'grouped' => 1,
            'hoursformat' => 1,
            'separator_day_hours' => ': ',
            'separator_days' => '<br />',
            'separator_grouped_days' => ' - ',
            'separator_hours_hours' => '-',
            'separator_more_hours' => ', ',
            'showclosed' => 'all',
            'timezone_field' => '',
          ),
          'type' => 'office_hours',
          'weight' => 9,
        ),
        'product_list' => array(
          'label' => 'above',
          'settings' => array(),
          'type' => 'hidden',
          'weight' => 0,
        ),
        'teaser' => array(
          'label' => 'above',
          'settings' => array(),
          'type' => 'hidden',
          'weight' => 0,
        ),
      ),
      'entity_type' => 'node',
      'fences_wrapper' => '',
      'field_name' => 'field_store_hours',
      'label' => 'Store Hours',
      'required' => 0,
      'settings' => array(
        'user_register_form' => FALSE,
      ),
      'widget' => array(
        'active' => 0,
        'module' => 'office_hours',
        'settings' => array(),
        'type' => 'office_hours',
        'weight' => 7,
      ),
    ),
  );

  $fields['sl_props_misc'] = array(
    'field_config' => array(
      'translatable' => '0',
      'settings' => array(
        'profile2_private' => FALSE,
      ),
      'field_name' => 'sl_props_misc',
      'type' => 'text_long',
      'active' => '1',
      'locked' => '0',
      'cardinality' => '1',
    ),
    'field_instance' => array(
      'label' => 'Misc. Properties',
      'widget' => array(
        'weight' => '5',
        'type' => 'text_textarea',
        'active' => 1,
        'settings' => array(
          'rows' => '7',
        ),
      ),
      'settings' => array(
        'text_processing' => '0',
        'user_register_form' => FALSE,
      ),
      'display' => array(
        'default' => array(
          'label' => 'above',
          'type' => 'text_default',
          'settings' => array(),
          'weight' => 5,
        ),
        'teaser' => array(
          'type' => 'hidden',
          'label' => 'above',
          'settings' => array(),
          'weight' => 0,
        ),
      ),
      'required' => 0,
      'description' => '',
      'default_value' => NULL,
      'field_name' => 'sl_props_misc',
      'entity_type' => 'node',
      'bundle' => 'office_location',
    ),
  );
  $fields['sl_props_phone'] = array(
    'field_config' => array(
      'translatable' => '0',
      'settings' => array(
        'max_length' => '255',
        'profile2_private' => FALSE,
      ),
      'field_name' => 'sl_props_phone',
      'type' => 'text',
      'active' => '1',
      'locked' => '0',
      'cardinality' => '1',
    ),
    'field_instance' => array(
      'label' => 'Store Phone',
      'widget' => array(
        'weight' => '6',
        'type' => 'text_textfield',
        'active' => 1,
        'settings' => array(
          'size' => '25',
        ),
      ),
      'settings' => array(
        'text_processing' => '0',
        'user_register_form' => FALSE,
      ),
      'display' => array(
        'default' => array(
          'label' => 'above',
          'type' => 'text_default',
          'settings' => array(),
          'weight' => 6,
        ),
        'teaser' => array(
          'type' => 'hidden',
          'label' => 'above',
          'settings' => array(),
          'weight' => 0,
        ),
      ),
      'required' => 0,
      'description' => '',
      'default_value' => NULL,
      'field_name' => 'sl_props_phone',
      'entity_type' => 'node',
      'bundle' => 'office_location',
    ),
  );
  $fields['sl_props_web'] = array(
    'field_config' => array(
      'translatable' => '0',
      'settings' => array(
        'max_length' => '255',
        'profile2_private' => FALSE,
      ),
      'field_name' => 'sl_props_web',
      'type' => 'text',
      'active' => '1',
      'locked' => '0',
      'cardinality' => '1',
    ),
    'field_instance' => array(
      'label' => 'Store Website',
      'widget' => array(
        'weight' => '7',
        'type' => 'text_textfield',
        'active' => 1,
        'settings' => array(
          'size' => '60',
        ),
      ),
      'settings' => array(
        'text_processing' => '0',
        'user_register_form' => FALSE,
      ),
      'display' => array(
        'default' => array(
          'label' => 'above',
          'type' => 'text_default',
          'settings' => array(),
          'weight' => 7,
        ),
        'teaser' => array(
          'type' => 'hidden',
          'label' => 'above',
          'settings' => array(),
          'weight' => 0,
        ),
      ),
      'required' => 0,
      'description' => 'Enter website as a comma separated value (note: do not include white space and use a fully qualified URL) e.g. Some Store,http://www.some-store.com',
      'default_value' => NULL,
      'field_name' => 'sl_props_web',
      'entity_type' => 'node',
      'bundle' => 'office_location',
    ),
  );
  return $fields;
}

/**
 * Implements hook_install().
 */
function store_locator_install() {

  $fields = store_locator_installed_fields();
  // Add all fields and their instances.
  foreach ($fields as $field) {
    // Look for existing field.
    $field_config = field_info_field($field['field_config']['field_name']);
    if (empty($field_config)) {
      field_create_field($field['field_config']);
    }
    // Look for existing instance.
    $instance = field_info_instance($field['field_instance']['entity_type'], $field['field_config']['field_name'], $field['field_instance']['bundle']);
    if (empty($instance)) {
      field_create_instance($field['field_instance']);
    }
  }
}

/**
 * Implements hook_uninstall().
 */
function store_locator_uninstall() {
  drupal_uninstall_schema('store_locator');
  // Delete all the variables we set with system_settings_form().
  variable_del('store_locator_map_long');
  variable_del('store_locator_map_lat');
  variable_del('store_locator_map_zoom');
  variable_del('store_locator_marker_icon');

  // Collect all store nodes that were created when this module was enabled.
  $query = db_select('node', 'n');
  $query->fields('n', array('nid'));
  $query->condition('type', 'office_location', '=');
  $results = $query->execute()->fetchAllAssoc('nid');

  // ...and delete them all.
  node_delete_multiple(array_keys($results));

  // Delete the field bases, and instances, and their data that this module
  // creates.
  $fields = store_locator_installed_fields();
  foreach($fields as $field) {
    field_delete_field($field['field_config']['field_name']);
  }

  // Loop over any remaining field instances attached to the 'store_location'
  // bundle and delete them individually.
  $instances = field_info_instances('node', 'office_location');
  foreach ($instances as $instance_name => $instance) {
    field_delete_instance($instance);
  }

  // Delete the content type
  node_type_delete('office_location');

  // Purge all field information.
  field_purge_batch(1000);
}
